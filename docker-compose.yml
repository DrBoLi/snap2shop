version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: visual_search
      POSTGRES_USER: visual_search
      POSTGRES_PASSWORD: visual_search_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U visual_search"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend ML Service
  backend:
    build: 
      context: ./backend
      dockerfile: ../Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://visual_search:visual_search_password@postgres:5432/visual_search
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
      - LOG_LEVEL=INFO
      - APP_URL=http://localhost:8000
    volumes:
      - backend_data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend Remix App
  web:
    build:
      context: ./web
      dockerfile: ../Dockerfile.web
    ports:
      - "3000:3000"
    environment:
      - SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
      - SHOPIFY_API_SECRET=${SHOPIFY_API_SECRET}
      - SCOPES=read_products
      - SHOPIFY_APP_URL=http://localhost:3000
      - BACKEND_URL=http://backend:8000
      - DATABASE_URL=file:dev.sqlite
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - web_data:/app/data

volumes:
  postgres_data:
  redis_data:
  backend_data:
  web_data: